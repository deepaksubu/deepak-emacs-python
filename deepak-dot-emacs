;;-*- Emacs-Lisp -*-
;;load the path to the directory
(require 'cl) ; a rare necessary use of REQUIRE
(defvar *emacs-load-start* (current-time))

(add-to-list 'load-path "~/.emacs.d/")

(defvar first-time t
  "flag signifying this is the first time that .emacs has been evaled")

;;; backup/autosave
(defvar backup-dir (expand-file-name "~/.emacs.d/backup/"))
(defvar autosave-dir (expand-file-name "~/.emacs.d/autosave/"))
(setq backup-directory-alist (list (cons ".*" backup-dir)))
(setq auto-save-list-file-prefix autosave-dir)
(setq auto-save-file-name-transforms `((".*" ,autosave-dir t)))

;;add auto indentation support with each new line
(define-key global-map (kbd "RET") 'newline-and-indent)

(define-key global-map (kbd "<f2>") 'helm-browse-code)

(setq browse-url-browser-function 'browse-url-generic
 browse-url-generic-program "google-chrome")

;;global undo support
(require 'undo-tree)
(global-undo-tree-mode)

;;line number support
(global-linum-mode 1)

;;Remove the annoying toolbars and stuff
(menu-bar-mode -1) (tool-bar-mode -1) (scroll-bar-mode -1)

;;Add the interactive mode for emacs
(ido-mode 1)
(setq ido-enable-flex-matching t)


(require 'comint)
(define-key comint-mode-map (kbd "M-") 'comint-next-input)
(define-key comint-mode-map (kbd "M-") 'comint-previous-input)
(define-key comint-mode-map [down] 'comint-next-matching-input-from-input)
(define-key comint-mode-map [up] 'comint-previous-matching-input-from-input)


;;Inhibit the startup screen in emacs
(setq inhibit-startup-message t
      inhibit-startup-echo-area-message t)

;;move between frames using shift keys
(windmove-default-keybindings)

;;autocomplete
(add-to-list 'load-path "/home/dsubramanian/.emacs.d/autocomplete/")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "/home/dsubramanian/.emacs.d/autocomplete//ac-dict")
(ac-config-default)

;;yassnippet
;;(add-to-list 'load-path
;;              "~/.emacs.d/yasnippet")
;;(require 'yasnippet)
;;(yas-global-mode 1)

;;python support
;;(add-to-list 'load-path "~/.emacs.d/deepak-python.el")
;;(load "~/.emacs.d/deepak-python.el" )

(load "~/.emacs.d/git.el" )
(load "~/.emacs.d/git-blame.el" )

;;zenbburn color theme for emacs
(add-to-list 'load-path "~/.emacs.d/deepak-color-themes.el")
(load "~/.emacs.d/deepak-color-themes.el")

;;support for copy to and from system clipboard
(setq x-select-enable-clipboard t)

(add-to-list 'load-path "~/.emacs.d/deepak-org-mode.el")
(load "~/.emacs.d/deepak-org-mode.el")

;; tramp support
(require 'tramp)

;;groovy / grails support
;;(add-to-list 'load-path "~/.emacs.d/deepak-grails.el")
;;(load "~/.emacs.d/deepak-grails.el")


(setq-default indent-tabs-mode nil)

;;(add-to-list 'load-path "~/.emacs.d/python/helm")
;;(require 'helm-config)

(define-key input-decode-map "\e[1;2A" [S-up])

;; Under UNIX
(if (not (equal system-type 'ms-dos))
    (progn
      (if first-time
	  (server-start))))
(byte-recompile-directory "~/.emacs.d/" 0)

;; Add Emacs close confirmation
(setq kill-emacs-query-functions
      (cons (lambda () (yes-or-no-p "Really kill Emacs?"))
     kill-emacs-query-functions))

(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
)
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 )
(message "My .emacs loaded in %ds" (destructuring-bind (hi lo ms) (current-time)
                           (- (+ hi lo) (+ (first *emacs-load-start*) (second *emacs-load-start*)))))