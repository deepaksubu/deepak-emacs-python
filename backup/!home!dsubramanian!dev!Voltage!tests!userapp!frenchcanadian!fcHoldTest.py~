# -*- coding: utf-8 -*-
import voltage
from voltage.flow.travel.rearden import  airHotelCarHold,airHotelCar
from voltage.flow.login import rpa
from voltage.flow.travel.base import Flow
from voltage.fragment.userapp import travel
import testemailsend
import fcCancelHeldAHCwithHTMLConfirm 


"""
    Metadata
    ++++++++

    * Priority: P1
    * Stores: AirHotelCar
    AHC Hold and Cancel 
    Configuration Requirements
    ++++++++++++++++++++++++++

    #. Userapp URL
    #. Domain (part of the url)
    Test Case- CWTFrench-CancelHeldAirHotelRentalCarFlowWithHTMLConfirmation
    
    #. Activated user in the Personal Assistant
   
   """

class FcHoldTest(fcCancelHeldAHCwithHTMLConfirm.FcCancelHeldAHCFlow,airHotelCarHold.Flow):
    
    def main(self):
     
  
        self.setup_defaults()
        ## Sc Avoid Prepaid Hotel Hold 
        #self.setup_defaults_hotel() 
        self.setup_variables()
        

        self.select_tripplanner()
        self.verify_tripplanner()

        self.tripplanner_populate_air()
        #self.tripplanner_add_hotel()
        #self.tripplanner_add_car()
        self.search()
        #self.verify_air_search()

        self.select_departing_flight()
        #self.verify_air_search()

        self.select_return_flight()
        #self.verify_hotel_search()

        #self.select_hotel()
        #self.verify_hotelroom_search()

        #self.select_room()
         
       
        #self.verify_car_search()
        #self.select_car_location()
        
        #self.verify_car_rental_search()
        #self.select_rental()
        
        #self.verify_review()

        self.review_trip()
        #self.verify_purchase_page()
      
        self.hold_trip()
       # self.verify_hold()
        self.hold_confirm()
        self.verify_hold_confirm()
                
        self.navigate_to_details()
        self.verify_details()
        
        self.verify_hold_status()
        
        self.finish()
      
      
     
        
def test_main():
        
        test = voltage.Test()
        browser = test.browser()
        assert isinstance(browser, voltage.Browser) # Tip for Eclipse
        try:
            
               ## Zero touch implementation
          args = {
                "seed_type" : test.config["travel_regression"]["seed"]["frenchcanadian_seed_type"],
                "domain_type" : test.config["travel_regression"]["seed"][test.config["travel_regression"]["seed"]["frenchcanadian_seed_type"]]["generic_domain_type"], 
                "user_type" : "user_one"
                }
          
          args = travel.rpa_login(test, browser, rpa.Login, args)
    
          browser.execute(test, FcHoldTest)
          
         
        
       
        except:
         test.handle_exception()
         testemailsend.send(test.results())
         
       
         
        return test.results()
 