"""
Personal assistant login (aka rearden login)
"""

from voltage.flow.login import base
from voltage.fragment import window
from voltage.fragment.userapp import travel
from voltage.seed_webservice import SeedWebservice
from voltage.user_exceptions import SeedDataError

class Login(base.Login):
    """
    Purpose
    +++++++

    Log into the Rearden Personal Assistant

    Configuration Requirements
    ++++++++++++++++++++++++++

    #. Userapp URL
    #. Domain (part of the url)

    Seed Requirements
    +++++++++++++++++

    #. Activated user in the Personal Assistant
    """
    def calc_username_password(self):
        """
        Figure out if the username/password (and domain url) to use are from
        config files, passed in by the user, or from seed data
        """
        self.my_username = self.args.get('username', self.config.username)
        self.my_password = self.args.get('password', self.config.password)
        self.my_domain_url = self.args.get('domain_url', self.config.target)

        if 'seed_type' in self.args and 'domain_type' in self.args and \
           'user_type' in self.args:
            seed = SeedWebservice().get_username_pwd(self.args.get('seed_type'),
                   'sites', self.args.get('domain_type'),
                   self.args.get('user_type'))
            if 'username' not in seed or 'password' not in seed:
                raise SeedDataError
            self.my_username = seed.get('username')
            self.my_password = seed.get('password')
            self.my_domain_url = seed.get('domain_full_url', self.my_domain_url)

    def load_login_page(self):
        """
        1. Load the login page from the login server
        """
        self.language = travel.get_language(self)
        self.upreservations = travel.get_resourcebundle_text(self, "HomePageBundle", "ki18nUpcomingHeader",self.language)
        if self.upreservations is None:    ## In case of Resource bundles absence
            self.upreservations = "Upcoming Reservations"                   
        self.browser.open(self.my_domain_url)
        #Sc - Handle Console Error page- DO NOT CHECKIN  THIS CODE 
        if self.browser.is_text_present("Error"):
            self.browser.click("link=Login Page")
            self.browser.wait_for_text("Username")
        if ( self.language =='en'):
            text = 'Sign In'
            self.test.assert_true(self.browser.is_text_present(text), text)

    def fill_out_login_form(self):
        """
        2. Fill out the login form with the username and password
        """

        self.browser.set_speed(0)
        if (  (self.language =='en') and self.browser.is_element_present("link=English") ):
            self.browser.click("link=English")
            self.browser.wait_for_page_to_load(self.config.max_wait)

        elif ( (self.language=="fr")  ):
            self.browser.click("xpath=//div[@class='subCol2']//span")
            self.browser.wait_for_page_to_load(self.config.max_wait)

        elif ((self.language=="es")):
            self.browser.click("xpath=//div[@class='subCol2']//span")
            self.browser.wait_for_page_to_load(self.config.max_wait)
            
        self.browser.type('userName', self.my_username)
        self.browser.type('passWord', self.my_password)
        self.browser.set_speed(self.config.speed)

    def submit_login_form(self):
        """
        3. Submit the login form
        """

        ##self.browser.click('link=Sign In')
        self.browser.click('id=signInButton1')
        self.browser.wait_for_page_to_load(self.config.max_wait)
        if self.browser.is_element_present("link=English"):
            msg = 'Unable to login to the UAP'
            bad = 'The User Name and Password combination that you entered'
            good = 'Upcoming Reservations'
            self.test.assert_false(self.browser.is_text_present(bad), msg)
            self.test.assert_true(self.browser.is_text_present(good), msg)

    def verify_home_page(self):
        ## TODO
        if (self.language=='en'):
            uprs = travel.get_resourcebundle_text(self, "HomePageBundle", "ki18nUpcomingHeader",self.language)
            if uprs is None:   ## In case of Resource bundles absence
                uprs = "Upcoming Reservations"
            self.browser.wait_for_text(uprs ,self.config.max_wait)
            
    def navigate_to_forgot_password_page(self):
        """
        Navigates to the 'Forgot Username or Password Page'
        """
        self.browser.click("//a[text()='Forgot your username or password?']")
        self.browser.wait_for_page_to_load(self.config.max_wait)

    def main(self):
        self.calc_username_password()
        self.load_login_page()
        #self.browser.register_url()
        self.fill_out_login_form()
        self.submit_login_form()
        self.verify_home_page()
